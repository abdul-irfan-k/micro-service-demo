name: Auth Service Test
on: [push]
jobs:
  auth-test:
    runs-on: ${{ fromJSON('["ubuntu-latest", "self-hosted"]')[github.repository == 'github/docs-internal'] }}
    services:
      mongodb:
        image: mongo:4.4.6
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: admin
          MONGO_INITDB_DATABASE: APP-DATABASE
        ports:
          - 27017:27017
        options: >-
          --health-cmd mongo
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      # need to use a token from a user with access to github/github for this step
      ADMIN_JWT-ACCESS_TOKEN_SECRET: adminstrongjwtsecret
      ADMIN_JWT_REFRESH_TOKEN_SECRET: adminstrongjwtsecret
      USER_JWT_ACCESS_TOKEN_SECRET: strongsecre
      USER_JWT_REFRESH_TOKEN_SECRET: strongsecret
      FRONTEND_URL: http://localhost:3000/
    defaults:
      run:
        working-directory: auth
    steps:
      - name: Git checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      # - name: Start MongoDB
      #   uses: supercharge/mongodb-github-action@1.11.0
      #   with:
      #     mongodb-version: ${{ matrix.mongodb-version }}
      - name: Install mongosh
        run: |
          sudo apt-get install gnupg
          wget -qO- https://www.mongodb.org/static/pgp/server-7.0.asc | sudo tee /etc/apt/trusted.gpg.d/server-7.0.asc
          echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list
          sudo apt-get update
          sudo apt-get install -y mongodb-mongosh
          mongosh --version
      - name: Initalize MongoDB
        run: |
          mongosh --host localhost:27017 -u admin -p admin --authenticationDatabase admin <<EOF
            db = db.getSiblingDB('APP-DB');
            db.createUser({ user: 'APP-USERNAME', pwd: 'APP-PASSWORD', roles: [{ role: 'readWrite', db: 'APP-DB' }] })
            db.createCollection('APP-COLLECTION');
          EOF
          # Do whatever you like in here

      - name: Install dependencies
        run: pnpm installl

      - name: Test The Auth Service
        run: pnpm test

apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongodb-pv
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "/mnt/data/mongodb"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:latest
          ports:
            - containerPort: 27017
          # env:
          #   - name: MONGO_INITDB_ROOT_USERNAME
          #     value: "your-username"
          #   - name: MONGO_INITDB_ROOT_PASSWORD
          #     value: "your-password"
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
      volumes:
        - name: mongodb-data
          persistentVolumeClaim:
            claimName: mongodb-pvc






---
apiVersion: v1
kind: Service
metadata:
  name: micro-demo-mongo-service
spec:
  type: NodePort
  ports:
    - port: 27017
      targetPort: 27017
      nodePort: 30001
  selector:
    app: mongodb






# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: micro-demo-mongo-deployment
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: micro-demo-mongo
#   template:
#     metadata:
#       labels:
#         app: micro-demo-mongo
#     spec:
#       containers:
#         - name: micro-demo-mongo
#           imagePullPolicy: IfNotPresent
#           image: mongo
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: micro-demo-mongo-service
# spec:
#   selector:
#     app: micro-demo-mongo
#   ports:
#     - name: db
#       protocol: TCP
#       port: 27017
#       targetPort: 27017
#   type: LoadBalancer
